version: '3.4'

networks:
  frontend:
  backend:

services:
  catalog:
    image: jewels/catalogapi
    build:
      context: .\ProductCatalogApi
      dockerfile: Dockerfile
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: CatalogDb
      DatabaseUser: sa
      DatabasePassword: ProductApi(!)
      ExternalCatalogBaseUrl: http://localhost:7000
    ports:
      - "7000:80"
    container_name: jewelscatalogapi
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
  cart:
    build:
      context: .\CartApi
      dockerfile: Dockerfile
    image: jewels/cartapi
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.238.49:6900
      ConnectionString: basket.data
    ports:
      - "6810:80"
    container_name: cartapi
    networks:
      - backend
      - frontend
    depends_on:
      - basket.data
      - tokenserver

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1500:1433"
    container_name: jewelssqlserver
    networks:
      - backend

  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    image: jewels/tokenapi
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:5210
    ports:
      - "6900:80"
    container_name: tokenserviceapi1
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  webmvc:
    build:
      context: .\webmvc
      dockerfile: Dockerfile
    image: jewels/webmvc
    container_name: webshop
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://catalog
      IdentityUrl: http://192.168.238.49:6900
      CallBackUrl: http://localhost:5210
    ports:
      - "5210:80"
    networks:
      - frontend
    depends_on:
      - catalog
      - cart
      - tokenserver
    
  basket.data:
    image: redis
    container_name: basketdata
    ports:
      - "6090:6379"
    networks:
      - backend




